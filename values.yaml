# Note: you can amend this values.yaml file to substitute your own custom docker images instead of those
# provided by the Jupyter project if required.

proxy:
  service:
    type: ClusterIP
  https: # Enable and extend to configure HTTPS.
    enabled: false
  traefik:
    containerSecurityContext: &security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
  secretSync:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
  chp:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value

hub:
  podSecurityContext:
    fsGroup:
  containerSecurityContext:
    <<: *security_context
    runAsUser: # let openshift set the value
    runAsGroup: # let openshift set the value
  image:
    name: quay.io/jupyterhub/k8s-hub
    tag: 4.0.0-0.dev.git.6635.hecbe9b5b

singleuser:
  # startTimeout: 1200 # Extend because of large image size.
  uid: # let openshift set the value
  fsGid:
  cloudMetadata:
    blockWithIptables: false
  image:
    name: quay.io/jupyterhub/k8s-singleuser-sample 
    tag: 4.0.0-0.dev.git.6635.hecbe9b5b

prePuller:
  containerSecurityContext:
    <<: *security_context
    runAsUser: # let openshift set the value
    runAsGroup: # let openshift set the value
  hook:
    enabled: true
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
    image:
      name: quay.io/jupyterhub/k8s-image-awaiter
      tag: 3.3.7
  pause:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value

scheduling:
  userScheduler:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
